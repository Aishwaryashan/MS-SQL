CREATE TABLE EMPLOYEE_DETAILS
(
      EMPLOYEE_ID INT PRIMARY KEY,
	  FIRST_NAME CHAR(20) NOT NULL,
	  LAST_NAME CHAR(20) NOT NULL,
	  SALARY INT ,
	  DEPARTMENT CHAR(20) NOT NULL
);

INSERT INTO EMPLOYEE_DETAILS(EMPLOYEE_ID, FIRST_NAME , LAST_NAME, SALARY , DEPARTMENT)
VALUES(1 , 'AISH', 'CHANDRASEKARAN', 1200000, 'TECH');

INSERT INTO EMPLOYEE_DETAILS(EMPLOYEE_ID, FIRST_NAME , LAST_NAME, SALARY , DEPARTMENT) 
VALUES(2 , 'ESHA', 'DESWAL', 1200000, 'TECH');

INSERT Into EMPLOYEE_DETAILS(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT)
VALUES(3, 'AMRITH', 'ANAND', 1300000, 'CSE');

INSERT INTO EMPLOYEE_DETAILS(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT)
VALUES(4, 'SRI' , 'LAYA' , 1400000, 'CSE');

INSERT INTO EMPLOYEE_DETAILS(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT)
VALUES(5, 'ANKIT' , 'RAJ' , 1400000, 'CSE');

INSERT INTO EMPLOYEE_DETAILS(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT)
VALUES(6, 'PRINCE' , 'BHAGAT' , 1400000, 'CSE');

SELECT * FROM EMPLOYEE_DETAILS;

SELECT *FROM EMPLOYEE_DETAILS
WHERE FIRST_NAME = 'AISH';

SELECT *FROM EMPLOYEE_DETAILS
WHERE FIRST_NAME LIKE 'A%'; --- TO PRINT THE NAMES STARTS WITH A 

SELECT *FROM EMPLOYEE_DETAILS
WHERE LAST_NAME LIKE '%A%'; ---TO PRINT THE NAMES WHICH HAS A IN MIDDLE


 ----AGGREGATE FUNCTIONS


SELECT MAX(SALARY) FROM EMPLOYEE_DETAILS; --- TO FIND THE MAX SALARY

SELECT MIN(SALARY)FROM EMPLOYEE_DETAILS; ---TO FIND THE MIN SALARY

SELECT COUNT (SALARY)FROM EMPLOYEE_DETAILS; ---TO COUNT THE NUMBER OF ROWS

SELECT AVG(SALARY)FROM EMPLOYEE_DETAILS;--- TI GET THE AVG

--- ASCENDING DESENDING

SELECT * FROM EMPLOYEE_DETAILS 
ORDER BY FIRST_NAME; --- ASCENDING ORDER

SELECT * FROM EMPLOYEE_DETAILS 
ORDER BY FIRST_NAME DESC; ---DESCENDING ORDER

UPDATE EMPLOYEE_DETAILS
SET FIRST_NAME = 'AISHWARYA'
WHERE FIRST_NAME = 'AISH';

SELECT*FROM EMPLOYEE_DETAILS;

UPDATE EMPLOYEE_DETAILS
SET FIRST_NAME = 'SHANTHI'---UPDATE A NEW DETAIL EDIT A DETAIL OF THE EMPLOYEE
WHERE EMPLOYEE_ID = 1;

SELECT*FROM EMPLOYEE_DETAILS;

DELETE FROM EMPLOYEE_DETAILS 
WHERE EMPLOYEE_ID=6;--- DELETE THE ROW OF ENMPLOYEE DETAILS 

SELECT*FROM EMPLOYEE_DETAILS;

--- NUMERIC FUNCTIONS

SELECT ABS(-9) ;  --- ABSOLUTE VALUE             //9

SELECT CEILING(31.12); --- PASSING A FLOATING INTEGER VALUE IT GIVES UPPER VALUE 31.13 GIVES 32       //32

SELECT FLOOR(39.92); ---PASSING A FLOATING INTEGER VALUE IT GIVES LOWER VALUE 39.92 GIVES 39      //39

SELECT SIGN(5);--- VALUES IN POSITIVE GIVES 1               //1
SELECT SIGN(-12345);--- VALUES IN NEGATIVE GIVES -1         //-1
SELECT SIGN(0);--- VALUES IN ZERO GIVES 0                 //0

SELECT SQRT(64);--- SQUARE ROOT               //8

SELECT SQUARE(8);--- 8 *8 = OUTPUT            // 64

SELECT PI(); --- PI VALUE             //3.14159....

---STRINGS

SELECT SUBSTRING ('MICROSOFT', 6,9); ---IT PRINTS FROM 6 TO 9TH LETTER IF THE WORD     //SOFT 

SELECT REPLACE ('MICROSOFT', 'MICRO', 'MAJOR'); ---REPLACNG THE MICRO TO MAJOR       // MAJORSOFT

SELECT REPLICATE ('AISHWARYA',10); ---REPLICATING 10 TIMES                         //AISHWARYAAISHWARYAAISHWARYAAISHWARYA...10TIME

USE TESTDB;

SELECT * FROM EMPLOYEE_DETAILS;


---BOOL VALUES - AND / OR / NOT

SELECT FIRST_NAME FROM EMPLOYEE_DETAILS      ---- USING OF AND , MEAN IT HAS TO SATISFY THE BOTH WHERE CLAUSE AND THE AND CONDITION TO PRINT THE OUTPUT
WHERE LAST_NAME = 'CHANDRASEKARAN'
AND DEPARTMENT = 'TECH';

SELECT FIRST_NAME FROM EMPLOYEE_DETAILS    --- USING OF OR , EVEN ONE CONDITION SATISFIES PRINTS BOTH
WHERE LAST_NAME = 'CHANDRASEKARAN'
OR DEPARTMENT = 'TECH';

SELECT FIRST_NAME FROM EMPLOYEE_DETAILS      --- USAGE OF NOT (!) , PRINTS OUTPUT EXCEPT OF THAT CONDITION
WHERE LAST_NAME ! = 'CHANDRASEKARAN';








